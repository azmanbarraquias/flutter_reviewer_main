name: flutter_reviewer_main
description: "A new Flutter project."
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

#  Dart Version Use
environment:
  sdk: '>=3.4.1 <4.0.0'

#  Flutter 3.22.1 • channel stable • https://github.com/flutter/flutter.git
#  Framework • revision a14f74ff3a (7 days ago) • 2024-05-22 11:08:21 -0500
#  Engine • revision 55eae6864b
#  Tools • Dart 3.4.1 • DevTools 2.34.3


# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter


  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.6
  provider: ^6.1.2
  tuple: ^2.0.2
  device_preview: ^1.1.0
  flutter_glow: ^0.3.0
  widget_with_codeview: ^3.1.0
  feedback: ^3.0.1
  fl_chart: ^0.66.2
  flutter_animate: ^4.5.0
  gap: ^3.0.1
  cached_network_image: ^3.3.1
  popover: ^0.3.0
  get: ^4.6.6
  image_picker: ^1.0.7
  flutter_svg: ^2.0.10+1
  go_router: ^13.2.1

  http: any
  flutter_highlight: any
  flutter_speed_dial: any
  google_fonts: any
  selectable: any
  url_launcher: any
  string_scanner: any
  intl: any
  flutter_cache_manager: ^3.3.2
  flutter_emoji: ^2.5.1
dev_dependencies:
  flutter_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^3.0.0

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  # assets:
  #   - images/a_dot_burr.jpeg
  #   - images/a_dot_ham.jpeg
  assets:
    - assets/instagram_bottom_navigation_bar/assets/vectors/
    - assets/instagram_bottom_navigation_bar/assets/images/
    - assets/
    # Include a single source code file:
    # Include all files under a subfoler by adding trailing "/":
    - lib/template/

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  fonts:
    - family: PingFangHK
      fonts:
        - asset: assets/fonts/PingFangHK-Regular.ttf
    - family: OpenSans
      fonts:
        - asset: assets/fonts/OpenSans-Regular.ttf
        - asset: assets/fonts/OpenSans-Italic.ttf
          style: italic
        - asset: assets/fonts/OpenSans-Bold.ttf
          weight: 700
    - family: Hipsters
      fonts:
        - asset: assets/fonts/hopsters.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
